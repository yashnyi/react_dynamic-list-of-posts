{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","api/users.js","index.js"],"names":["BASE_URL","request","url","options","fetch","then","response","ok","Error","status","statusText","json","result","data","getAllPosts","PostsList","selectedUserId","useState","posts","setPosts","selectedPostId","setSelectedPostId","useEffect","userId","filter","post","className","map","key","id","title","type","onClick","NewCommentForm","name","placeholder","PostDetails","App","users","setUsers","setSelectedUserId","sort","previous","next","onChange","event","value","target","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82f186d7.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport function request(url, options) {\n  return fetch(url, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    })\n    .then(result => result.data);\n}\n","import { BASE_URL, request } from './api';\n\nexport function getAllPosts() {\n  return request(`${BASE_URL}/posts`);\n}\n\nexport function getUserPosts(userId) {\n  return getAllPosts()\n    .then(posts => posts.filter(\n      post => (post.userId === userId),\n    ));\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\nimport { getUserPosts, getAllPosts } from '../../api/posts';\n\nexport const PostsList = ({ selectedUserId }) => {\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState('');\n\n  useEffect(() => {\n    if (!selectedUserId) {\n      getAllPosts()\n        .then(setPosts);\n    } else {\n      getUserPosts(selectedUserId)\n        .then(setPosts);\n    }\n  }, [selectedUserId]);\n\n  const handleOpenButton = (id) => {\n    setSelectedPostId(id);\n  };\n\n  const handleCloseButton = (id) => {\n    setSelectedPostId('');\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li\n            key={post.id}\n            className=\"PostList__item\"\n          >\n            <div>\n              <b>\n                {`[User #${post.userId}]`}\n              </b>\n              {post.title || 'No title'}\n            </div>\n            {post.id !== selectedPostId ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => handleOpenButton(post.id)}\n              >\n                Open\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => handleCloseButton('')}\n              >\n                Close\n              </button>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  selectedUserId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = () => (\n  <form className=\"NewCommentForm\">\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Your name\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"email\"\n        placeholder=\"Your email\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <textarea\n        name=\"body\"\n        placeholder=\"Type comment here\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <button\n      type=\"submit\"\n      className=\"NewCommentForm__submit-button button\"\n    >\n      Add a comment\n    </button>\n  </form>\n);\n","import React from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\nexport const PostDetails = () => (\n  <div className=\"PostDetails\">\n    <h2>Post details:</h2>\n\n    <section className=\"PostDetails__post\">\n      <p>sunt aut facere repellat provident occaecati excepturi optio</p>\n    </section>\n\n    <section className=\"PostDetails__comments\">\n      <button type=\"button\" className=\"button\">Hide 2 comments</button>\n\n      <ul className=\"PostDetails__list\">\n        <li className=\"PostDetails__list-item\">\n          <button\n            type=\"button\"\n            className=\"PostDetails__remove-button button\"\n          >\n            X\n          </button>\n          <p>My first comment</p>\n        </li>\n\n        <li className=\"PostDetails__list-item\">\n          <button\n            type=\"button\"\n            className=\"PostDetails__remove-button button\"\n          >\n            X\n          </button>\n          <p>sad sds dfsadf asdf asdf</p>\n        </li>\n      </ul>\n    </section>\n\n    <section>\n      <div className=\"PostDetails__form-wrapper\">\n        <NewCommentForm />\n      </div>\n    </section>\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUsers } from './api/users';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState('');\n\n  useEffect(() => {\n    getUsers()\n      .then(result => setUsers(result));\n  }, []);\n\n  const handleChange = (event) => {\n    const { value } = event.target;\n\n    setSelectedUserId(value);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={handleChange}\n          >\n            <option value=\"0\">All users</option>\n\n            {users.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedUserId={+selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import { BASE_URL, request } from './api';\n\nexport function getUsers() {\n  return request(`${BASE_URL}/users`)\n    .then(users => users.sort((previous, next) => previous.id - next.id));\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}